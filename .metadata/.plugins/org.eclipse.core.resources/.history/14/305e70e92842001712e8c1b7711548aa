package JNetSocket;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketAddress;
import java.net.SocketException;
import java.net.UnknownHostException;

public class UDPServerSocket {
    private DatagramSocket socket;
    private IRecData recInstance=null;
    public boolean InitServer(IRecData rec,String host,int port)
    {
      //创建DatagramSocket对象  
        if(host==null||host.isEmpty())
        {
            try {
                socket = new DatagramSocket(port);
            } catch (SocketException e) {
               
                e.printStackTrace();
                return false;
            }  
        }
        else
        {
            InetAddress addr = null;
            try {
                addr = InetAddress.getByName(host);
            } catch (UnknownHostException e) {
                e.printStackTrace();
                return false;
            }
            try {
                socket = new DatagramSocket(port,addr);
            } catch (SocketException e) {
                e.printStackTrace();
                return false;
            }  
        }
        try {
            socket.setReceiveBufferSize(128);
        } catch (SocketException e) {
            e.printStackTrace();
        }
        Thread recData=new Thread(new Runnable(){
            @Override
            public void run() {
                byte[] buf = new byte[1024];  //定义byte数组  
                DatagramPacket packet = new DatagramPacket(buf, buf.length);  //创建DatagramPacket对象  
                try {
                    socket.receive(packet);
                } catch (IOException e) {
                    e.printStackTrace();
                } 
                //从服务器返回给客户端数据  
                InetAddress clientAddress = packet.getAddress(); //获得客户端的IP地址  
                int clientPort = packet.getPort(); //获得客户端的端口号  
                SocketAddress sendAddress = packet.getSocketAddress();  
                String feedback = "Received";  
                byte[] backbuf = feedback.getBytes();  
                DatagramPacket sendPacket = new DatagramPacket(backbuf, backbuf.length, sendAddress); //封装返回给客户端的数据  
                try {
                    socket.send(sendPacket);
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }  //通过套接字反馈服务器数据  
                  
                socket.close();  //关闭套接字  
            }
            
        });
      
       
      
    }
}
