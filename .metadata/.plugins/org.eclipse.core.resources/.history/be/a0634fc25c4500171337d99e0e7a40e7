/**    
 * 文件名：DataRspTimer.java    
 *    
 * 版本信息：    
 * 日期：2017年5月30日    
 * Copyright 足下 Corporation 2017     
 * 版权所有    
 *    
 */
package TimerTask;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import DataCache.DataReMailing;
import DataConfig.NetConfig;
import JNetSocket.MulticastClient;
import JNetSocket.UDPClient;
import ServerProcess.ServerDataTransfer;
import SysInfo.SelfSysInfo;
import SysInfo.SysComModel;

/**    
 *     
 * 项目名称：DataDiversion    
 * 类名称：DataRspTimer    
 * 类描述：    
 * 创建人：jinyu    
 * 创建时间：2017年5月30日 下午11:53:40    
 * 修改人：jinyu    
 * 修改时间：2017年5月30日 下午11:53:40    
 * 修改备注：    
 * @version     
 *     
 */
public class DataRspTimer {
    //
    MulticastClient mclient=new MulticastClient();
    UDPClient client=new UDPClient();
    //
    ScheduledExecutorService service = Executors  
            .newSingleThreadScheduledExecutor();  
    // 第二个参数为首次执行的延时时间，第三个参数为定时执行的间隔时间  
    public void Start()
    {
        service.scheduleAtFixedRate( new Runnable() {

            @Override
            public void run() {
             
            }
        
        }, 3, 1, TimeUnit.SECONDS);
    }
    
    /*
     * 发送心跳
     */
    public void SendFwData()
    {
        Iterator<String> it = DataCache.DataCache.fwData.keySet().iterator();
        
        while(it.hasNext()){
            String key = it.next();
            if(key.equals("3")) myMap.put(key+"new", "new3");
        }
        ArrayList<DataReMailing>  list=DataCache.DataCache.fwData.getOrDefault(fwName, null);
        if(list!=null)
        {
            
        }
        ServerDataTransfer server=new ServerDataTransfer();
     server.processData(src, fwName, allData);
    }
}
